/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/layout'
import { Route as publicRouteRouteImport } from './routes/(public)/route'
import { Route as consoleRouteRouteImport } from './routes/(console)/route'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as publicCallbackRouteImport } from './routes/(public)/callback'
import { Route as publicAboutRouteImport } from './routes/(public)/about'
import { Route as oauthAuthRouteImport } from './routes/(oauth)/auth'
import { Route as onboardingCreateOrganizationRouteRouteImport } from './routes/(onboarding)/create-organization/route'
import { Route as consoleKnowledgeBaseRouteRouteImport } from './routes/(console)/knowledge-base/route'
import { Route as consoleConnectionsRouteRouteImport } from './routes/(console)/connections/route'
import { Route as onboardingCreateOrganizationIndexRouteImport } from './routes/(onboarding)/create-organization/index'
import { Route as consoleSettingsIndexRouteImport } from './routes/(console)/settings/index'
import { Route as consoleKnowledgeBaseIndexRouteImport } from './routes/(console)/knowledge-base/index'
import { Route as consoleAssistantsIndexRouteImport } from './routes/(console)/assistants/index'
import { Route as consoleActionsIndexRouteImport } from './routes/(console)/actions/index'
import { Route as publicLegalTermsAndConditionsRouteImport } from './routes/(public)/legal/terms-and-conditions'
import { Route as publicLegalPrivacyPolicyRouteImport } from './routes/(public)/legal/privacy-policy'
import { Route as consoleAssistantsAssistantIdRouteRouteImport } from './routes/(console)/assistants/$assistantId/route'
import { Route as consoleKnowledgeBaseCollectionIdIndexRouteImport } from './routes/(console)/knowledge-base/$collectionId/index'
import { Route as consoleConnectionsOrganizationalIndexRouteImport } from './routes/(console)/connections/organizational/index'
import { Route as consoleConnectionsIntegrationsIndexRouteImport } from './routes/(console)/connections/integrations/index'
import { Route as consoleConnectionsDirectIndexRouteImport } from './routes/(console)/connections/direct/index'
import { Route as consoleActionsActionTypeIndexRouteImport } from './routes/(console)/actions/$actionType/index'
import { Route as consoleAssistantsAssistantIdPromptRouteImport } from './routes/(console)/assistants/$assistantId/prompt'
import { Route as consoleAssistantsAssistantIdConfiguracionRouteImport } from './routes/(console)/assistants/$assistantId/configuracion'
import { Route as consoleAssistantsAssistantIdAccionesRouteImport } from './routes/(console)/assistants/$assistantId/acciones'
import { Route as consoleConnectionsOrganizationalWhatsappIndexRouteImport } from './routes/(console)/connections/organizational/whatsapp/index'
import { Route as consoleConnectionsIntegrationsCalendlyIndexRouteImport } from './routes/(console)/connections/integrations/calendly/index'
import { Route as consoleActionsActionTypeActionIdIndexRouteImport } from './routes/(console)/actions/$actionType/$actionId/index'
import { Route as consoleConnectionsOrganizationalWhatsappCreateIndexRouteImport } from './routes/(console)/connections/organizational/whatsapp/create/index'

const LayoutRoute = LayoutRouteImport.update({
  id: '/layout',
  path: '/layout',
  getParentRoute: () => rootRouteImport,
} as any)
const publicRouteRoute = publicRouteRouteImport.update({
  id: '/(public)',
  getParentRoute: () => rootRouteImport,
} as any)
const consoleRouteRoute = consoleRouteRouteImport.update({
  id: '/(console)',
  getParentRoute: () => rootRouteImport,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicRouteRoute,
} as any)
const publicCallbackRoute = publicCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => publicRouteRoute,
} as any)
const publicAboutRoute = publicAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => publicRouteRoute,
} as any)
const oauthAuthRoute = oauthAuthRouteImport.update({
  id: '/(oauth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const onboardingCreateOrganizationRouteRoute =
  onboardingCreateOrganizationRouteRouteImport.update({
    id: '/(onboarding)/create-organization',
    path: '/create-organization',
    getParentRoute: () => rootRouteImport,
  } as any)
const consoleKnowledgeBaseRouteRoute =
  consoleKnowledgeBaseRouteRouteImport.update({
    id: '/knowledge-base',
    path: '/knowledge-base',
    getParentRoute: () => consoleRouteRoute,
  } as any)
const consoleConnectionsRouteRoute = consoleConnectionsRouteRouteImport.update({
  id: '/connections',
  path: '/connections',
  getParentRoute: () => consoleRouteRoute,
} as any)
const onboardingCreateOrganizationIndexRoute =
  onboardingCreateOrganizationIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => onboardingCreateOrganizationRouteRoute,
  } as any)
const consoleSettingsIndexRoute = consoleSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => consoleRouteRoute,
} as any)
const consoleKnowledgeBaseIndexRoute =
  consoleKnowledgeBaseIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => consoleKnowledgeBaseRouteRoute,
  } as any)
const consoleAssistantsIndexRoute = consoleAssistantsIndexRouteImport.update({
  id: '/assistants/',
  path: '/assistants/',
  getParentRoute: () => consoleRouteRoute,
} as any)
const consoleActionsIndexRoute = consoleActionsIndexRouteImport.update({
  id: '/actions/',
  path: '/actions/',
  getParentRoute: () => consoleRouteRoute,
} as any)
const publicLegalTermsAndConditionsRoute =
  publicLegalTermsAndConditionsRouteImport.update({
    id: '/legal/terms-and-conditions',
    path: '/legal/terms-and-conditions',
    getParentRoute: () => publicRouteRoute,
  } as any)
const publicLegalPrivacyPolicyRoute =
  publicLegalPrivacyPolicyRouteImport.update({
    id: '/legal/privacy-policy',
    path: '/legal/privacy-policy',
    getParentRoute: () => publicRouteRoute,
  } as any)
const consoleAssistantsAssistantIdRouteRoute =
  consoleAssistantsAssistantIdRouteRouteImport.update({
    id: '/assistants/$assistantId',
    path: '/assistants/$assistantId',
    getParentRoute: () => consoleRouteRoute,
  } as any)
const consoleKnowledgeBaseCollectionIdIndexRoute =
  consoleKnowledgeBaseCollectionIdIndexRouteImport.update({
    id: '/$collectionId/',
    path: '/$collectionId/',
    getParentRoute: () => consoleKnowledgeBaseRouteRoute,
  } as any)
const consoleConnectionsOrganizationalIndexRoute =
  consoleConnectionsOrganizationalIndexRouteImport.update({
    id: '/organizational/',
    path: '/organizational/',
    getParentRoute: () => consoleConnectionsRouteRoute,
  } as any)
const consoleConnectionsIntegrationsIndexRoute =
  consoleConnectionsIntegrationsIndexRouteImport.update({
    id: '/integrations/',
    path: '/integrations/',
    getParentRoute: () => consoleConnectionsRouteRoute,
  } as any)
const consoleConnectionsDirectIndexRoute =
  consoleConnectionsDirectIndexRouteImport.update({
    id: '/direct/',
    path: '/direct/',
    getParentRoute: () => consoleConnectionsRouteRoute,
  } as any)
const consoleActionsActionTypeIndexRoute =
  consoleActionsActionTypeIndexRouteImport.update({
    id: '/actions/$actionType/',
    path: '/actions/$actionType/',
    getParentRoute: () => consoleRouteRoute,
  } as any)
const consoleAssistantsAssistantIdPromptRoute =
  consoleAssistantsAssistantIdPromptRouteImport.update({
    id: '/prompt',
    path: '/prompt',
    getParentRoute: () => consoleAssistantsAssistantIdRouteRoute,
  } as any)
const consoleAssistantsAssistantIdConfiguracionRoute =
  consoleAssistantsAssistantIdConfiguracionRouteImport.update({
    id: '/configuracion',
    path: '/configuracion',
    getParentRoute: () => consoleAssistantsAssistantIdRouteRoute,
  } as any)
const consoleAssistantsAssistantIdAccionesRoute =
  consoleAssistantsAssistantIdAccionesRouteImport.update({
    id: '/acciones',
    path: '/acciones',
    getParentRoute: () => consoleAssistantsAssistantIdRouteRoute,
  } as any)
const consoleConnectionsOrganizationalWhatsappIndexRoute =
  consoleConnectionsOrganizationalWhatsappIndexRouteImport.update({
    id: '/organizational/whatsapp/',
    path: '/organizational/whatsapp/',
    getParentRoute: () => consoleConnectionsRouteRoute,
  } as any)
const consoleConnectionsIntegrationsCalendlyIndexRoute =
  consoleConnectionsIntegrationsCalendlyIndexRouteImport.update({
    id: '/integrations/calendly/',
    path: '/integrations/calendly/',
    getParentRoute: () => consoleConnectionsRouteRoute,
  } as any)
const consoleActionsActionTypeActionIdIndexRoute =
  consoleActionsActionTypeActionIdIndexRouteImport.update({
    id: '/actions/$actionType/$actionId/',
    path: '/actions/$actionType/$actionId/',
    getParentRoute: () => consoleRouteRoute,
  } as any)
const consoleConnectionsOrganizationalWhatsappCreateIndexRoute =
  consoleConnectionsOrganizationalWhatsappCreateIndexRouteImport.update({
    id: '/organizational/whatsapp/create/',
    path: '/organizational/whatsapp/create/',
    getParentRoute: () => consoleConnectionsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof publicIndexRoute
  '/layout': typeof LayoutRoute
  '/connections': typeof consoleConnectionsRouteRouteWithChildren
  '/knowledge-base': typeof consoleKnowledgeBaseRouteRouteWithChildren
  '/create-organization': typeof onboardingCreateOrganizationRouteRouteWithChildren
  '/auth': typeof oauthAuthRoute
  '/about': typeof publicAboutRoute
  '/callback': typeof publicCallbackRoute
  '/assistants/$assistantId': typeof consoleAssistantsAssistantIdRouteRouteWithChildren
  '/legal/privacy-policy': typeof publicLegalPrivacyPolicyRoute
  '/legal/terms-and-conditions': typeof publicLegalTermsAndConditionsRoute
  '/actions': typeof consoleActionsIndexRoute
  '/assistants': typeof consoleAssistantsIndexRoute
  '/knowledge-base/': typeof consoleKnowledgeBaseIndexRoute
  '/settings': typeof consoleSettingsIndexRoute
  '/create-organization/': typeof onboardingCreateOrganizationIndexRoute
  '/assistants/$assistantId/acciones': typeof consoleAssistantsAssistantIdAccionesRoute
  '/assistants/$assistantId/configuracion': typeof consoleAssistantsAssistantIdConfiguracionRoute
  '/assistants/$assistantId/prompt': typeof consoleAssistantsAssistantIdPromptRoute
  '/actions/$actionType': typeof consoleActionsActionTypeIndexRoute
  '/connections/direct': typeof consoleConnectionsDirectIndexRoute
  '/connections/integrations': typeof consoleConnectionsIntegrationsIndexRoute
  '/connections/organizational': typeof consoleConnectionsOrganizationalIndexRoute
  '/knowledge-base/$collectionId': typeof consoleKnowledgeBaseCollectionIdIndexRoute
  '/actions/$actionType/$actionId': typeof consoleActionsActionTypeActionIdIndexRoute
  '/connections/integrations/calendly': typeof consoleConnectionsIntegrationsCalendlyIndexRoute
  '/connections/organizational/whatsapp': typeof consoleConnectionsOrganizationalWhatsappIndexRoute
  '/connections/organizational/whatsapp/create': typeof consoleConnectionsOrganizationalWhatsappCreateIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof publicIndexRoute
  '/layout': typeof LayoutRoute
  '/connections': typeof consoleConnectionsRouteRouteWithChildren
  '/auth': typeof oauthAuthRoute
  '/about': typeof publicAboutRoute
  '/callback': typeof publicCallbackRoute
  '/assistants/$assistantId': typeof consoleAssistantsAssistantIdRouteRouteWithChildren
  '/legal/privacy-policy': typeof publicLegalPrivacyPolicyRoute
  '/legal/terms-and-conditions': typeof publicLegalTermsAndConditionsRoute
  '/actions': typeof consoleActionsIndexRoute
  '/assistants': typeof consoleAssistantsIndexRoute
  '/knowledge-base': typeof consoleKnowledgeBaseIndexRoute
  '/settings': typeof consoleSettingsIndexRoute
  '/create-organization': typeof onboardingCreateOrganizationIndexRoute
  '/assistants/$assistantId/acciones': typeof consoleAssistantsAssistantIdAccionesRoute
  '/assistants/$assistantId/configuracion': typeof consoleAssistantsAssistantIdConfiguracionRoute
  '/assistants/$assistantId/prompt': typeof consoleAssistantsAssistantIdPromptRoute
  '/actions/$actionType': typeof consoleActionsActionTypeIndexRoute
  '/connections/direct': typeof consoleConnectionsDirectIndexRoute
  '/connections/integrations': typeof consoleConnectionsIntegrationsIndexRoute
  '/connections/organizational': typeof consoleConnectionsOrganizationalIndexRoute
  '/knowledge-base/$collectionId': typeof consoleKnowledgeBaseCollectionIdIndexRoute
  '/actions/$actionType/$actionId': typeof consoleActionsActionTypeActionIdIndexRoute
  '/connections/integrations/calendly': typeof consoleConnectionsIntegrationsCalendlyIndexRoute
  '/connections/organizational/whatsapp': typeof consoleConnectionsOrganizationalWhatsappIndexRoute
  '/connections/organizational/whatsapp/create': typeof consoleConnectionsOrganizationalWhatsappCreateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(console)': typeof consoleRouteRouteWithChildren
  '/(public)': typeof publicRouteRouteWithChildren
  '/layout': typeof LayoutRoute
  '/(console)/connections': typeof consoleConnectionsRouteRouteWithChildren
  '/(console)/knowledge-base': typeof consoleKnowledgeBaseRouteRouteWithChildren
  '/(onboarding)/create-organization': typeof onboardingCreateOrganizationRouteRouteWithChildren
  '/(oauth)/auth': typeof oauthAuthRoute
  '/(public)/about': typeof publicAboutRoute
  '/(public)/callback': typeof publicCallbackRoute
  '/(public)/': typeof publicIndexRoute
  '/(console)/assistants/$assistantId': typeof consoleAssistantsAssistantIdRouteRouteWithChildren
  '/(public)/legal/privacy-policy': typeof publicLegalPrivacyPolicyRoute
  '/(public)/legal/terms-and-conditions': typeof publicLegalTermsAndConditionsRoute
  '/(console)/actions/': typeof consoleActionsIndexRoute
  '/(console)/assistants/': typeof consoleAssistantsIndexRoute
  '/(console)/knowledge-base/': typeof consoleKnowledgeBaseIndexRoute
  '/(console)/settings/': typeof consoleSettingsIndexRoute
  '/(onboarding)/create-organization/': typeof onboardingCreateOrganizationIndexRoute
  '/(console)/assistants/$assistantId/acciones': typeof consoleAssistantsAssistantIdAccionesRoute
  '/(console)/assistants/$assistantId/configuracion': typeof consoleAssistantsAssistantIdConfiguracionRoute
  '/(console)/assistants/$assistantId/prompt': typeof consoleAssistantsAssistantIdPromptRoute
  '/(console)/actions/$actionType/': typeof consoleActionsActionTypeIndexRoute
  '/(console)/connections/direct/': typeof consoleConnectionsDirectIndexRoute
  '/(console)/connections/integrations/': typeof consoleConnectionsIntegrationsIndexRoute
  '/(console)/connections/organizational/': typeof consoleConnectionsOrganizationalIndexRoute
  '/(console)/knowledge-base/$collectionId/': typeof consoleKnowledgeBaseCollectionIdIndexRoute
  '/(console)/actions/$actionType/$actionId/': typeof consoleActionsActionTypeActionIdIndexRoute
  '/(console)/connections/integrations/calendly/': typeof consoleConnectionsIntegrationsCalendlyIndexRoute
  '/(console)/connections/organizational/whatsapp/': typeof consoleConnectionsOrganizationalWhatsappIndexRoute
  '/(console)/connections/organizational/whatsapp/create/': typeof consoleConnectionsOrganizationalWhatsappCreateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/layout'
    | '/connections'
    | '/knowledge-base'
    | '/create-organization'
    | '/auth'
    | '/about'
    | '/callback'
    | '/assistants/$assistantId'
    | '/legal/privacy-policy'
    | '/legal/terms-and-conditions'
    | '/actions'
    | '/assistants'
    | '/knowledge-base/'
    | '/settings'
    | '/create-organization/'
    | '/assistants/$assistantId/acciones'
    | '/assistants/$assistantId/configuracion'
    | '/assistants/$assistantId/prompt'
    | '/actions/$actionType'
    | '/connections/direct'
    | '/connections/integrations'
    | '/connections/organizational'
    | '/knowledge-base/$collectionId'
    | '/actions/$actionType/$actionId'
    | '/connections/integrations/calendly'
    | '/connections/organizational/whatsapp'
    | '/connections/organizational/whatsapp/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/layout'
    | '/connections'
    | '/auth'
    | '/about'
    | '/callback'
    | '/assistants/$assistantId'
    | '/legal/privacy-policy'
    | '/legal/terms-and-conditions'
    | '/actions'
    | '/assistants'
    | '/knowledge-base'
    | '/settings'
    | '/create-organization'
    | '/assistants/$assistantId/acciones'
    | '/assistants/$assistantId/configuracion'
    | '/assistants/$assistantId/prompt'
    | '/actions/$actionType'
    | '/connections/direct'
    | '/connections/integrations'
    | '/connections/organizational'
    | '/knowledge-base/$collectionId'
    | '/actions/$actionType/$actionId'
    | '/connections/integrations/calendly'
    | '/connections/organizational/whatsapp'
    | '/connections/organizational/whatsapp/create'
  id:
    | '__root__'
    | '/(console)'
    | '/(public)'
    | '/layout'
    | '/(console)/connections'
    | '/(console)/knowledge-base'
    | '/(onboarding)/create-organization'
    | '/(oauth)/auth'
    | '/(public)/about'
    | '/(public)/callback'
    | '/(public)/'
    | '/(console)/assistants/$assistantId'
    | '/(public)/legal/privacy-policy'
    | '/(public)/legal/terms-and-conditions'
    | '/(console)/actions/'
    | '/(console)/assistants/'
    | '/(console)/knowledge-base/'
    | '/(console)/settings/'
    | '/(onboarding)/create-organization/'
    | '/(console)/assistants/$assistantId/acciones'
    | '/(console)/assistants/$assistantId/configuracion'
    | '/(console)/assistants/$assistantId/prompt'
    | '/(console)/actions/$actionType/'
    | '/(console)/connections/direct/'
    | '/(console)/connections/integrations/'
    | '/(console)/connections/organizational/'
    | '/(console)/knowledge-base/$collectionId/'
    | '/(console)/actions/$actionType/$actionId/'
    | '/(console)/connections/integrations/calendly/'
    | '/(console)/connections/organizational/whatsapp/'
    | '/(console)/connections/organizational/whatsapp/create/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  consoleRouteRoute: typeof consoleRouteRouteWithChildren
  publicRouteRoute: typeof publicRouteRouteWithChildren
  LayoutRoute: typeof LayoutRoute
  onboardingCreateOrganizationRouteRoute: typeof onboardingCreateOrganizationRouteRouteWithChildren
  oauthAuthRoute: typeof oauthAuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/layout': {
      id: '/layout'
      path: '/layout'
      fullPath: '/layout'
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(console)': {
      id: '/(console)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof consoleRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/callback': {
      id: '/(public)/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof publicCallbackRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/about': {
      id: '/(public)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof publicAboutRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(oauth)/auth': {
      id: '/(oauth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof oauthAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(onboarding)/create-organization': {
      id: '/(onboarding)/create-organization'
      path: '/create-organization'
      fullPath: '/create-organization'
      preLoaderRoute: typeof onboardingCreateOrganizationRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(console)/knowledge-base': {
      id: '/(console)/knowledge-base'
      path: '/knowledge-base'
      fullPath: '/knowledge-base'
      preLoaderRoute: typeof consoleKnowledgeBaseRouteRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(console)/connections': {
      id: '/(console)/connections'
      path: '/connections'
      fullPath: '/connections'
      preLoaderRoute: typeof consoleConnectionsRouteRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(onboarding)/create-organization/': {
      id: '/(onboarding)/create-organization/'
      path: '/'
      fullPath: '/create-organization/'
      preLoaderRoute: typeof onboardingCreateOrganizationIndexRouteImport
      parentRoute: typeof onboardingCreateOrganizationRouteRoute
    }
    '/(console)/settings/': {
      id: '/(console)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof consoleSettingsIndexRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(console)/knowledge-base/': {
      id: '/(console)/knowledge-base/'
      path: '/'
      fullPath: '/knowledge-base/'
      preLoaderRoute: typeof consoleKnowledgeBaseIndexRouteImport
      parentRoute: typeof consoleKnowledgeBaseRouteRoute
    }
    '/(console)/assistants/': {
      id: '/(console)/assistants/'
      path: '/assistants'
      fullPath: '/assistants'
      preLoaderRoute: typeof consoleAssistantsIndexRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(console)/actions/': {
      id: '/(console)/actions/'
      path: '/actions'
      fullPath: '/actions'
      preLoaderRoute: typeof consoleActionsIndexRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(public)/legal/terms-and-conditions': {
      id: '/(public)/legal/terms-and-conditions'
      path: '/legal/terms-and-conditions'
      fullPath: '/legal/terms-and-conditions'
      preLoaderRoute: typeof publicLegalTermsAndConditionsRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/legal/privacy-policy': {
      id: '/(public)/legal/privacy-policy'
      path: '/legal/privacy-policy'
      fullPath: '/legal/privacy-policy'
      preLoaderRoute: typeof publicLegalPrivacyPolicyRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(console)/assistants/$assistantId': {
      id: '/(console)/assistants/$assistantId'
      path: '/assistants/$assistantId'
      fullPath: '/assistants/$assistantId'
      preLoaderRoute: typeof consoleAssistantsAssistantIdRouteRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(console)/knowledge-base/$collectionId/': {
      id: '/(console)/knowledge-base/$collectionId/'
      path: '/$collectionId'
      fullPath: '/knowledge-base/$collectionId'
      preLoaderRoute: typeof consoleKnowledgeBaseCollectionIdIndexRouteImport
      parentRoute: typeof consoleKnowledgeBaseRouteRoute
    }
    '/(console)/connections/organizational/': {
      id: '/(console)/connections/organizational/'
      path: '/organizational'
      fullPath: '/connections/organizational'
      preLoaderRoute: typeof consoleConnectionsOrganizationalIndexRouteImport
      parentRoute: typeof consoleConnectionsRouteRoute
    }
    '/(console)/connections/integrations/': {
      id: '/(console)/connections/integrations/'
      path: '/integrations'
      fullPath: '/connections/integrations'
      preLoaderRoute: typeof consoleConnectionsIntegrationsIndexRouteImport
      parentRoute: typeof consoleConnectionsRouteRoute
    }
    '/(console)/connections/direct/': {
      id: '/(console)/connections/direct/'
      path: '/direct'
      fullPath: '/connections/direct'
      preLoaderRoute: typeof consoleConnectionsDirectIndexRouteImport
      parentRoute: typeof consoleConnectionsRouteRoute
    }
    '/(console)/actions/$actionType/': {
      id: '/(console)/actions/$actionType/'
      path: '/actions/$actionType'
      fullPath: '/actions/$actionType'
      preLoaderRoute: typeof consoleActionsActionTypeIndexRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(console)/assistants/$assistantId/prompt': {
      id: '/(console)/assistants/$assistantId/prompt'
      path: '/prompt'
      fullPath: '/assistants/$assistantId/prompt'
      preLoaderRoute: typeof consoleAssistantsAssistantIdPromptRouteImport
      parentRoute: typeof consoleAssistantsAssistantIdRouteRoute
    }
    '/(console)/assistants/$assistantId/configuracion': {
      id: '/(console)/assistants/$assistantId/configuracion'
      path: '/configuracion'
      fullPath: '/assistants/$assistantId/configuracion'
      preLoaderRoute: typeof consoleAssistantsAssistantIdConfiguracionRouteImport
      parentRoute: typeof consoleAssistantsAssistantIdRouteRoute
    }
    '/(console)/assistants/$assistantId/acciones': {
      id: '/(console)/assistants/$assistantId/acciones'
      path: '/acciones'
      fullPath: '/assistants/$assistantId/acciones'
      preLoaderRoute: typeof consoleAssistantsAssistantIdAccionesRouteImport
      parentRoute: typeof consoleAssistantsAssistantIdRouteRoute
    }
    '/(console)/connections/organizational/whatsapp/': {
      id: '/(console)/connections/organizational/whatsapp/'
      path: '/organizational/whatsapp'
      fullPath: '/connections/organizational/whatsapp'
      preLoaderRoute: typeof consoleConnectionsOrganizationalWhatsappIndexRouteImport
      parentRoute: typeof consoleConnectionsRouteRoute
    }
    '/(console)/connections/integrations/calendly/': {
      id: '/(console)/connections/integrations/calendly/'
      path: '/integrations/calendly'
      fullPath: '/connections/integrations/calendly'
      preLoaderRoute: typeof consoleConnectionsIntegrationsCalendlyIndexRouteImport
      parentRoute: typeof consoleConnectionsRouteRoute
    }
    '/(console)/actions/$actionType/$actionId/': {
      id: '/(console)/actions/$actionType/$actionId/'
      path: '/actions/$actionType/$actionId'
      fullPath: '/actions/$actionType/$actionId'
      preLoaderRoute: typeof consoleActionsActionTypeActionIdIndexRouteImport
      parentRoute: typeof consoleRouteRoute
    }
    '/(console)/connections/organizational/whatsapp/create/': {
      id: '/(console)/connections/organizational/whatsapp/create/'
      path: '/organizational/whatsapp/create'
      fullPath: '/connections/organizational/whatsapp/create'
      preLoaderRoute: typeof consoleConnectionsOrganizationalWhatsappCreateIndexRouteImport
      parentRoute: typeof consoleConnectionsRouteRoute
    }
  }
}

interface consoleConnectionsRouteRouteChildren {
  consoleConnectionsDirectIndexRoute: typeof consoleConnectionsDirectIndexRoute
  consoleConnectionsIntegrationsIndexRoute: typeof consoleConnectionsIntegrationsIndexRoute
  consoleConnectionsOrganizationalIndexRoute: typeof consoleConnectionsOrganizationalIndexRoute
  consoleConnectionsIntegrationsCalendlyIndexRoute: typeof consoleConnectionsIntegrationsCalendlyIndexRoute
  consoleConnectionsOrganizationalWhatsappIndexRoute: typeof consoleConnectionsOrganizationalWhatsappIndexRoute
  consoleConnectionsOrganizationalWhatsappCreateIndexRoute: typeof consoleConnectionsOrganizationalWhatsappCreateIndexRoute
}

const consoleConnectionsRouteRouteChildren: consoleConnectionsRouteRouteChildren =
  {
    consoleConnectionsDirectIndexRoute: consoleConnectionsDirectIndexRoute,
    consoleConnectionsIntegrationsIndexRoute:
      consoleConnectionsIntegrationsIndexRoute,
    consoleConnectionsOrganizationalIndexRoute:
      consoleConnectionsOrganizationalIndexRoute,
    consoleConnectionsIntegrationsCalendlyIndexRoute:
      consoleConnectionsIntegrationsCalendlyIndexRoute,
    consoleConnectionsOrganizationalWhatsappIndexRoute:
      consoleConnectionsOrganizationalWhatsappIndexRoute,
    consoleConnectionsOrganizationalWhatsappCreateIndexRoute:
      consoleConnectionsOrganizationalWhatsappCreateIndexRoute,
  }

const consoleConnectionsRouteRouteWithChildren =
  consoleConnectionsRouteRoute._addFileChildren(
    consoleConnectionsRouteRouteChildren,
  )

interface consoleKnowledgeBaseRouteRouteChildren {
  consoleKnowledgeBaseIndexRoute: typeof consoleKnowledgeBaseIndexRoute
  consoleKnowledgeBaseCollectionIdIndexRoute: typeof consoleKnowledgeBaseCollectionIdIndexRoute
}

const consoleKnowledgeBaseRouteRouteChildren: consoleKnowledgeBaseRouteRouteChildren =
  {
    consoleKnowledgeBaseIndexRoute: consoleKnowledgeBaseIndexRoute,
    consoleKnowledgeBaseCollectionIdIndexRoute:
      consoleKnowledgeBaseCollectionIdIndexRoute,
  }

const consoleKnowledgeBaseRouteRouteWithChildren =
  consoleKnowledgeBaseRouteRoute._addFileChildren(
    consoleKnowledgeBaseRouteRouteChildren,
  )

interface consoleAssistantsAssistantIdRouteRouteChildren {
  consoleAssistantsAssistantIdAccionesRoute: typeof consoleAssistantsAssistantIdAccionesRoute
  consoleAssistantsAssistantIdConfiguracionRoute: typeof consoleAssistantsAssistantIdConfiguracionRoute
  consoleAssistantsAssistantIdPromptRoute: typeof consoleAssistantsAssistantIdPromptRoute
}

const consoleAssistantsAssistantIdRouteRouteChildren: consoleAssistantsAssistantIdRouteRouteChildren =
  {
    consoleAssistantsAssistantIdAccionesRoute:
      consoleAssistantsAssistantIdAccionesRoute,
    consoleAssistantsAssistantIdConfiguracionRoute:
      consoleAssistantsAssistantIdConfiguracionRoute,
    consoleAssistantsAssistantIdPromptRoute:
      consoleAssistantsAssistantIdPromptRoute,
  }

const consoleAssistantsAssistantIdRouteRouteWithChildren =
  consoleAssistantsAssistantIdRouteRoute._addFileChildren(
    consoleAssistantsAssistantIdRouteRouteChildren,
  )

interface consoleRouteRouteChildren {
  consoleConnectionsRouteRoute: typeof consoleConnectionsRouteRouteWithChildren
  consoleKnowledgeBaseRouteRoute: typeof consoleKnowledgeBaseRouteRouteWithChildren
  consoleAssistantsAssistantIdRouteRoute: typeof consoleAssistantsAssistantIdRouteRouteWithChildren
  consoleActionsIndexRoute: typeof consoleActionsIndexRoute
  consoleAssistantsIndexRoute: typeof consoleAssistantsIndexRoute
  consoleSettingsIndexRoute: typeof consoleSettingsIndexRoute
  consoleActionsActionTypeIndexRoute: typeof consoleActionsActionTypeIndexRoute
  consoleActionsActionTypeActionIdIndexRoute: typeof consoleActionsActionTypeActionIdIndexRoute
}

const consoleRouteRouteChildren: consoleRouteRouteChildren = {
  consoleConnectionsRouteRoute: consoleConnectionsRouteRouteWithChildren,
  consoleKnowledgeBaseRouteRoute: consoleKnowledgeBaseRouteRouteWithChildren,
  consoleAssistantsAssistantIdRouteRoute:
    consoleAssistantsAssistantIdRouteRouteWithChildren,
  consoleActionsIndexRoute: consoleActionsIndexRoute,
  consoleAssistantsIndexRoute: consoleAssistantsIndexRoute,
  consoleSettingsIndexRoute: consoleSettingsIndexRoute,
  consoleActionsActionTypeIndexRoute: consoleActionsActionTypeIndexRoute,
  consoleActionsActionTypeActionIdIndexRoute:
    consoleActionsActionTypeActionIdIndexRoute,
}

const consoleRouteRouteWithChildren = consoleRouteRoute._addFileChildren(
  consoleRouteRouteChildren,
)

interface publicRouteRouteChildren {
  publicAboutRoute: typeof publicAboutRoute
  publicCallbackRoute: typeof publicCallbackRoute
  publicIndexRoute: typeof publicIndexRoute
  publicLegalPrivacyPolicyRoute: typeof publicLegalPrivacyPolicyRoute
  publicLegalTermsAndConditionsRoute: typeof publicLegalTermsAndConditionsRoute
}

const publicRouteRouteChildren: publicRouteRouteChildren = {
  publicAboutRoute: publicAboutRoute,
  publicCallbackRoute: publicCallbackRoute,
  publicIndexRoute: publicIndexRoute,
  publicLegalPrivacyPolicyRoute: publicLegalPrivacyPolicyRoute,
  publicLegalTermsAndConditionsRoute: publicLegalTermsAndConditionsRoute,
}

const publicRouteRouteWithChildren = publicRouteRoute._addFileChildren(
  publicRouteRouteChildren,
)

interface onboardingCreateOrganizationRouteRouteChildren {
  onboardingCreateOrganizationIndexRoute: typeof onboardingCreateOrganizationIndexRoute
}

const onboardingCreateOrganizationRouteRouteChildren: onboardingCreateOrganizationRouteRouteChildren =
  {
    onboardingCreateOrganizationIndexRoute:
      onboardingCreateOrganizationIndexRoute,
  }

const onboardingCreateOrganizationRouteRouteWithChildren =
  onboardingCreateOrganizationRouteRoute._addFileChildren(
    onboardingCreateOrganizationRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  consoleRouteRoute: consoleRouteRouteWithChildren,
  publicRouteRoute: publicRouteRouteWithChildren,
  LayoutRoute: LayoutRoute,
  onboardingCreateOrganizationRouteRoute:
    onboardingCreateOrganizationRouteRouteWithChildren,
  oauthAuthRoute: oauthAuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
