name: Deploy Workers

on:
  push:
    branches: [main]
    paths:
      - "apps/**"
      - "packages/**"
      - "turbo.json"
      - "package.json"
      - "pnpm-lock.yaml"

permissions:
  contents: read
  deployments: write

jobs:
  # Core Service
  deploy-core-service:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/core-service/') || contains(github.event.head_commit.added, 'apps/core-service/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/core-service
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ core-service deployed!"

  # API Gateway
  deploy-apis-gateway:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/apis-gateway/') || contains(github.event.head_commit.added, 'apps/apis-gateway/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/apis-gateway
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ apis-gateway deployed!"

  # Channel Services
  deploy-channel-services:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/channel-services/') || contains(github.event.head_commit.added, 'apps/channel-services/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/channel-services
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ channel-services deployed!"

  # Client
  deploy-client:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/client/') || contains(github.event.head_commit.added, 'apps/client/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/client
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ client deployed!"

  # Consumer Billing Balance
  deploy-consumer-billing-balance:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/consumer-billing-balance/') || contains(github.event.head_commit.added, 'apps/consumer-billing-balance/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/consumer-billing-balance
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ consumer-billing-balance deployed!"

  # Crypto Service
  deploy-crypto-service:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/crypto-service/') || contains(github.event.head_commit.added, 'apps/crypto-service/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/crypto-service
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ crypto-service deployed!"

  # ETL Log Processor
  deploy-etl-log-processor:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/etl-log-processor/') || contains(github.event.head_commit.added, 'apps/etl-log-processor/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/etl-log-processor
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ etl-log-processor deployed!"

  # Generator
  deploy-generator:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/generator/') || contains(github.event.head_commit.added, 'apps/generator/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/generator
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ generator deployed!"

  # Integrations Gateway
  deploy-integrations-gateway:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/integrations-gateway/') || contains(github.event.head_commit.added, 'apps/integrations-gateway/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/integrations-gateway
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ integrations-gateway deployed!"

  # Producer Billing Orchestrator
  deploy-producer-billing-orchestrator:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(github.event.head_commit.modified, 'apps/producer-billing-orchestrator/') || contains(github.event.head_commit.added, 'apps/producer-billing-orchestrator/') || contains(github.event.head_commit.modified, 'packages/') || contains(github.event.head_commit.added, 'packages/')
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm turbo run deploy --filter=@worker/producer-billing-orchestrator
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - run: echo "✅ producer-billing-orchestrator deployed!"
